<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Transformer的前世今生</title>
      <link href="/2021/11/21/Transformer%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/"/>
      <url>/2021/11/21/Transformer%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>Transformer，用过都说好。Transformer统治了NLP的半壁江山后，已经开始大规模蚕食CV的诸多任务了。这篇文章总结了Transformer的诞生和里面的具体细节，作为自己的总结文章bia :raising_hand:。</p><h2 id="1-机器翻译的发展"><a href="#1-机器翻译的发展" class="headerlink" title="1. 机器翻译的发展"></a>1. 机器翻译的发展</h2><p>研究员们为了进行机器翻译，得到你现在使用的Google翻译，百度翻译等等翻译引擎，从1950年就开始了努力。他们尝试过各种各样的方法，比如一大推略显朴素和僵硬的既定规则，或者是设定一些翻译的范例和prototype，又或者使用数据驱动的方式，借助数以万计的翻译数据来设计深度学习模型来进行自动化的翻译。从发展历程来看，我们有了以下这样几种翻译方案：</p><ul><li>「基于规则的机器翻译RBMT」</li><li>「基于范例的机器翻译EBMT」</li><li>「统计机器翻译SMT」</li><li>「神经机器翻译NMT」</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121154536969.png" alt="image-20211121154536969"></p><p>RBMT，EBMT距离我们太远，就不再细细讲述，我们简短回顾一下SMT方案和NMT方案。</p><h3 id="1-1-基于统计的机器翻译"><a href="#1-1-基于统计的机器翻译" class="headerlink" title="1.1 基于统计的机器翻译"></a>1.1 基于统计的机器翻译</h3><p>典型的SMT模型中有基于短语（phase）的PBMT。基于短语的统计翻译，将基本的翻译单元从原来的整句调整到了短语级别，被切分的短语不一定具有任何语法意义，在歧义消除，局部排序，解码效率上有一定的优势，降低了机器翻译系统的所要面对的复杂度，表现出了较好的模型健壮性，常常作为统计机器翻译系统研究的baseline。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121155758648.png" alt="image-20211121155758648" style="zoom:50%;" /></p><h3 id="1-2-基于神经网络的机器翻译"><a href="#1-2-基于神经网络的机器翻译" class="headerlink" title="1.2 基于神经网络的机器翻译"></a>1.2 基于神经网络的机器翻译</h3><p>神经机器翻译，顾名思义，就是借助神经网络进行翻译模型的学习。翻译模型的输入是一个自然语言的句子，输入网络前这条句子被我们使用分词+word Embedding表达成一个带有时序信息的向量序列，然后经过网路的翻译之后，输出target方语言中word Embedding的一个概率分布，进而得到翻译好的句子。由此可见一般的神经机器翻译的套路。当我们借助大量数据来驱动这样一个模型训练时，输入的源语言和期望的目标语言这两个独立的向量序列构成了一个pair，然后使用损失函数就能够驱动模型进行学习的优化，指导模型收敛，能够将源语言下的句子翻译成比较好的目标语言。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/rnn-animate.gif" alt="rnn-animate" style="zoom:67%;" /></p><h2 id="2-Seq2Seq模型的发展"><a href="#2-Seq2Seq模型的发展" class="headerlink" title="2. Seq2Seq模型的发展"></a>2. Seq2Seq模型的发展</h2><p>在诸多可以用来学习数据特性的深度学习模型中，非常适合处理拥有时序特性的数据的模型有RNN，LSTM，GRU…，他们在序列数据建模中大放异彩。就神经翻译框架来看，外形是差不多的，只是用来编码和解码的基础构件不同。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/d0icm-0nvdd.gif" alt="d0icm-0nvdd" style="zoom:50%;" /></p><h3 id="2-1-基础的RNN"><a href="#2-1-基础的RNN" class="headerlink" title="2.1 基础的RNN"></a>2.1 基础的RNN</h3><p>R(Recurent)NN其实有好几种villain版本。</p><ul><li>One-to-one</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121163857635.png" alt="image-20211121163857635" style="zoom:50%;" /></p><p>也就是最基本的单层网络，输入是x，经过Wx+b和激活函数f得到输出y。</p><ul><li>one-to-n</li></ul><p>输入不是一个序列，但是输出是序列的情况。输入的注入方式可以只在序列开始时注入，也可以是每个时间步都将输入注入模型。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121164211589.png" alt="image-20211121164211589" style="zoom:50%;" /></p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121164233669.png" alt="image-20211121164233669" style="zoom:40%;" /></p><p>这种one-to-n的结构可以处理的问题有：</p><ol><li>:honeybee:image caption「从图像生成文字」，此时输入的X就是图像中抽取的特征，而输出的y序列就是一段句子。</li><li>:first_quarter_moon:从类别生成语音或者音乐。</li></ol><ul><li>n-to-n</li></ul><p>最为经典的RNN结构，输入和输出都是等长的序列数据。假设输入X=(x1, x2, x3, x4)，每个x是一个单词的词向量。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121165119281.png" alt="image-20211121165119281" style="zoom:30%;" /></p><p>为了对序列数据进行建模，RNN引入了隐状态h(hidden state)的概念，h可以对序列形的数据提取特征，接着再转换为输出。先从h1的计算开始看：</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121165301935.png" alt="image-20211121165301935" style="zoom:40%;" /></p><p>h2的计算和h1类似。Note：在计算时，每一个时间步使用的参数U，W，b都是重复使用的，这也是Recurent的由来，也就是说没个时间步中的参数都是共享的，这是RNN的重要特性。按照相同方式一次计算剩下来的隐状态（使用相同的U，W，b）：</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121165606769.png" alt="image-20211121165606769" style="zoom:37%;" /></p><p>为了方便描述。在这里只画出序列长度为4的情况，实际上，You can play it all day。得到输出值的方法就是直接通过h进行计算：</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121165740947.png" alt="image-20211121165740947" style="zoom:40%;" /></p><p><strong>一个箭头就表示对对应的向量做一次类似于f(Wx+b)的变换，这里的这个箭头就表示对h1进行一次变换，得到输出y1。</strong>剩下的输出类似的进行（使用相同和y1相同的参数V和c）。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121165851729.png" alt="image-20211121165851729" style="zoom:40%;" /></p><p>这就是最经典的RNN结构，它的输入是x1, x2, …..xn，输出为y1, y2, …yn，也就是说，<strong>输入和输出序列必须要是等长的</strong>。由于这个限制的存在，经典RNN的适用范围比较小，但也有一些问题适合用经典的RNN结构建模，如：</p><ol><li>:eagle:计算视频中每一帧的分类标签，这种情况下输入输出序列的时间长度相同。</li><li>:rabbit2:输入为字符，输出为下一个字符的概率。这就是著名的CharRNN（The Unreasonable Effectiveness of Recurrent Neural <a href="https://link.zhihu.com/?target=http%3A//karpathy.github.io/2015/05/21/rnn-effectiveness/">Network</a>），可以用来生成文章，诗歌，甚至是代码。</li></ol><ul><li>n-to-one</li></ul><p>要处理的问题输入是一个序列，输出是一个单独的值而不是序列，应该怎样建模呢？实际上，我们只在最后一个h上进行输出变换就可以了：</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121170239796.png" alt="image-20211121170239796" style="zoom:45%;" /></p><p>这种结构通常用来处理序列分类问题。如输入一段文字判别它所属的类别，输入一个句子判断其情感倾向，输入一段视频并判断它的类别等等。</p><ul><li>n-to-m</li></ul><p>最后一种<strong>n-to-m</strong>的范式，就是久负盛名的<strong>Encoder-Decoder</strong>，它的输入和输出的序列长度不相等。Encoder-Decoder也叫做<strong>Seq2Seq</strong>。在机器翻译中，源语言和目标语言的句子长度往往不相同，为此，<strong>Encoder-Decoder结构先将输入数据编码成一个上下文语义向量c：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121170710429.png" alt="image-20211121170710429" style="zoom:50%;" /></p><p><strong>语义向量c</strong>可以有多种表达方式，最朴素的方法就是把Encoder的最后一个隐状态赋值给c，还可以对最后一个隐状态做些后续的变换得到c，也可以对所有的隐状态做变换。<strong>拿到c之后，就用另一个RNN网络对其进行解码</strong>，这部分RNN网络被称为Decoder。Decoder的RNN可以与Encoder的一样，也可以不一样。具体做法就是将c当做之前的初始状态h0输入到Decoder中：</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121170926202.png" alt="image-20211121170926202" style="zoom:50%;" /></p><p>还有一种做法是将c当作每一步的输入：</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121170956481.png" alt="image-20211121170956481" style="zoom:50%;" /></p><h3 id="2-2-Encoder-Decoder的应用"><a href="#2-2-Encoder-Decoder的应用" class="headerlink" title="2.2 Encoder-Decoder的应用"></a>2.2 Encoder-Decoder的应用</h3><p>由于这种Encoder-Decoder的结构不限制输入和输出的序列长度，因此应用范围非常广泛，比如：</p><ol><li>:walking:机器翻译：Encoder-Decoder的最经典应用，事实上，Seq2Seq结构就是机器翻译领域最先提出的。</li><li>:earth_asia:文本摘要：输入是一段文本序列，输出是这段文本序列的摘要序列。</li><li>:taco:阅读理解：将输入的文章和问题分别编码，再对其进行解码得到问题的答案。</li><li>:yum:语音识别：输入是语音信号序列，输出是文字序列。</li></ol><h3 id="2-3-Encoder-Decoder框架"><a href="#2-3-Encoder-Decoder框架" class="headerlink" title="2.3 Encoder-Decoder框架"></a>2.3 Encoder-Decoder框架</h3><p>Encoder-Decoder不是一个具体的模型，而是一种框架。</p><ul><li>Encoder：将输入的序列向量转换为固定长度的Embedding</li><li>Decoder：将固定长度的Embedding转换为Output序列</li><li>Encoder与Decoder可以彼此独立使用，实际上经常一起使用。</li></ul><p>因为Seq2Seq最早出现在机器翻译领域，最早被广泛使用的基模型是RNN，其实基础模型可以是RNN,CNN,BiRNN,LSTM,GRU…</p><h3 id="2-4-Encoder-Decoder缺点"><a href="#2-4-Encoder-Decoder缺点" class="headerlink" title="2.4 Encoder-Decoder缺点"></a>2.4 Encoder-Decoder缺点</h3><ul><li>最大的局限性：Encoder和Decoder之间的唯一联系是固定长度的语义Embedding<strong>c</strong>。</li><li>编码器要将整个序列的信息压缩进一个固定长度的语义向量<strong>c</strong>。</li><li>语义向量<strong>c</strong>无法完全表达整个序列的信息。</li><li>先输入的内容携带的信息会被后来的信息稀释掉，或者覆盖掉，因为输入的序列长度太长时，编码器无法将所有输入的信息保留。</li><li>输入序列越长，这样的现象越严重，这样使得在Decoder解码时一开始就没有办法获得足够的输入序列，解码效果就会大打折扣。</li></ul><p>因此为了弥补基础的Encoder- Decoder的缺陷，提出了Attention机制，来在很长的输入序列中建立Attention，建立近、中远程的token依赖关系，捕捉重点信息。</p><h3 id="2-4-加入attention后"><a href="#2-4-加入attention后" class="headerlink" title="2.4 加入attention后"></a>2.4 加入attention后</h3><p>注意力机制是对基础Encoder-Decoder的改良。Attention机制通过在每个时间输入不同的<strong>c</strong>来解决问题，下图是带有Attention机制的Decoder：</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211121221045984.png" alt="image-20211121221045984" style="zoom:50%;" /></p><p>上图中的<strong>c</strong>不再简单的是Encoder最后输出的一个隐状态了，而是通过一个加权矩阵，将Encoder中所有时间步的隐状态$h_i$进行了加权整合，这个加权矩阵由Encoder中的n个隐状态$h_i$和Decoder中的m个隐状态$h_j^‘$计算相似度得出，是一个$n\times m$​的矩阵。<strong>具体来说，我们用该矩阵中的元素aij衡量Encoder中第j阶段的hj和解码时第i阶段的相关性，最终Decoder中第i阶段的输入的上下文信息 ci就来自于所有 hj 对 aij 的加权和</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211122161627809.png" alt="image-20211122161627809" style="zoom:40%;" /></p><p>举个栗子，在上图中翻英的过程中，输入的中文序列的长度假设为4，输出的英文序列的长度假设为3，那么在Encoder和Decoder中分别会得到4个和3个隐状态，我们将其进行相似度的度量后，拿到了attention矩阵，然后将Encoder部分的隐状态通过这个attention矩阵进行加权，得到真正的往Decoder中送入的输入<strong>$c_1$​,$ c_2$​, $c_3$​</strong>。整个过程就是这样的啦，可以看到加了Attention矩阵后，就算是再长的序列，我们也能将其中的信息通过attention矩阵很好的考虑进来。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211122162913371.png" alt="image-20211122162913371" style="zoom:40%;" /></p><h3 id="2-5-attention的优点"><a href="#2-5-attention的优点" class="headerlink" title="2.5 attention的优点"></a>2.5 attention的优点</h3><ol><li>在机器翻译时，可以让生词不只是关注全局的语义向量c，由于增加了注意力机制，可以让接下来的输出重点关注输入序列中的一部分，根据注意力区域来获得此时的输出。</li><li>不再要求Encoder将所有信息都编码到一个固定的global的向量中啦。</li><li>将输入编码成向量序列，Decoder时，每一步选择性的从序列中挑选一个子集进行处理。</li><li>在输出序列的每一个时间步上，借助attention从Encoder的诸多隐状态中整理出最有助于当前输出节点的语义向量$c_i$。也就是说，学习到的注意力是会随着上下文进行变化的。</li></ol><h3 id="2-6-attention的缺点"><a href="#2-6-attention的缺点" class="headerlink" title="2.6 attention的缺点"></a>2.6 attention的缺点</h3><ol><li>需要为每个输入输出组合分别计算attention。50个单词的输出输出序列需要计算2500个attention。</li><li>attention在决定专注于某个方面之前需要遍历一遍记忆再决定下一个输出是以什么。</li></ol><h2 id="3-Encoder-Decoder-Attention和Transformer的关系"><a href="#3-Encoder-Decoder-Attention和Transformer的关系" class="headerlink" title="3. Encoder+Decoder+Attention和Transformer的关系"></a>3. Encoder+Decoder+Attention和Transformer的关系</h2><h3 id="3-1-基础款RNN做Encoder-Decoder的缺陷"><a href="#3-1-基础款RNN做Encoder-Decoder的缺陷" class="headerlink" title="3.1 基础款RNN做Encoder- Decoder的缺陷"></a>3.1 基础款RNN做Encoder- Decoder的缺陷</h3><p>看起来Encoder- Decoder+Attention已经无敌了，可Transformer黄雀在后，进行了改进就表明基础编码器RNN是有改进空间的。</p><p>细细想一想RNN处理数据的模式，输入一个序列向量，要反复重用同一个参数组进行前传，就意味着，RNN处理序列数据时，现阶段只能是串行处理，即上一个时间点的输入被编码好之后，才能去处理当前时间点以及后续时间点的输入，这样的处理方式，让RNN在面对序列数据时丧失了高效的处理速度。或许，只有在编码时不去依靠先前时间步的输入能够让串行数据得到并行处理，而Transformer就是这样做的。Transformer在编码阶段将序列向量分离编码，然后在编码结束后，统一计算self- attention进行注意力的计算，然后再统一将计算得到的注意力作用到先前的分离编码上。这样的手段让串行数据向量能够在编码的同时，还能兼顾到上下文这个概念。相比起RNN反复recurrent的处理数据的手段，参数量是变大了，但确实能够并行处理了序列数据了。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211122164729221.png" alt="image-20211122164729221" style="zoom:50%;" /></p><h3 id="3-2-Transformer做Encoder-Decoder的优势"><a href="#3-2-Transformer做Encoder-Decoder的优势" class="headerlink" title="3.2 Transformer做Encoder- Decoder的优势"></a>3.2 Transformer做Encoder- Decoder的优势</h3><p>说到这，Transformer的优势就不言而喻了。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/Transformer_decoder.png" alt="Transformer_decoder" style="zoom:67%;" /></p><div class="table-container"><table><thead><tr><th>RNN+Attention+ Seq2Seq</th><th>Transformer</th></tr></thead><tbody><tr><td>Encoder中的隐状态承接上文信息，通过串行处理为上下文建模</td><td>Encoder中通过self-attention为输入序列中建立attention，以此为上下文建模</td></tr><tr><td>DEcoder中的隐状态承接上文信息，通过串行处理为上下文建模</td><td>Decoder中通过self-attention为输出序列中建立attention，以此为上下文建模</td></tr><tr><td>Encoder- Decoder通过计算attention来为输入序列的编码和当前输出建立注意力</td><td>Encoder- Decoder通过encoder-decoder-attention为输入序列编码和当前输出建立编解码注意力</td></tr></tbody></table></div><p>以Transformer为Encoder和Decoder的NMT系统，基本上可以分为6个步骤：</p><ol><li>Encoder为输入序列里的每个token产生原始的embedding，在上图中用空圈表示。</li><li>利用self-attention将输入序列中所有token的信息进行汇总，先计算得到attention，然后以此为权重，重新矫正加权过的每个token的embedding，上图中用实圈表示。</li><li>Encoder重复N次self- attention，让每个token持续学习到完整的上下文语义。</li><li>Decoder在生成输出文字时也运用了self-attention，关注自己之前时刻点已经生成的元素，将其上文信息纳入生成后续元素的过程中。</li><li>在Encoder和Decoder各自捕捉到上下文信息后Decoder接着利用attention关注Encoder的所有输出，并计算Encoder编码与Decoder之间的attention，并把这种连接Encoder和Decoder的注意力用来帮助生成当前时刻点的输出。「其实这个注意力才是上文RNN- based的Seq2Seq模型中加入的attention。」</li><li>Decoder重复步骤4，5，来让当前元素包含到更完整的整体语义。</li></ol><h2 id="4-Transformer的内部运行机制"><a href="#4-Transformer的内部运行机制" class="headerlink" title="4. Transformer的内部运行机制"></a>4. Transformer的内部运行机制</h2><h3 id="4-1-Transformer的Input和position-Encoder"><a href="#4-1-Transformer的Input和position-Encoder" class="headerlink" title="4.1 Transformer的Input和position Encoder"></a>4.1 Transformer的Input和position Encoder</h3><ol><li><p>Input的表示方法</p><p>​    当我们进行机器翻译时，我们的输入输出是自然语言，所以第一步是要将语言表述成数学形式。</p><ul><li>1-of-N embedding。这种方式是在一个封闭的词库里面，将出现的每个单词进行one-hot表述。</li><li>word class。将相同类的单词放在一个class。（表示方式依然比较粗糙）</li><li>word Embedding。把不同的词用一个vector表示，vector的每一维隐式的表示物体的某种性质。word embedding希望相同性质的词的embedding能够聚的近一些，不同性质的词的embedding能够离得远一些，换言之，word embedding其实是一种soft的word class。</li></ul></li><li><p>位置信息编码</p><p>​    为什么要加入位置编码？我们的输入是一段带有时序信息的序列向量，但如果就这样把它放进Transformer的Encoder中进行特征的重表示，attention计算等等操作，它是会对序列信息不敏感的，换句话说，无论句子的结构怎么打乱，Transformer都会得到类似的结果。为了解决这个问题，就需要将位置信息显式的注入进输入。</p><p>​    位置编码也有绝对位置编码和相对位置编码等几种形式，在这里仅介绍绝对位置编码，通常这个位置编码的长度是和输入的序列向量同维的，这样方便位置编码和词向量逐位相加。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211122201305924.png" alt="image-20211122201305924" style="zoom: 67%;" /></p><p>具体公式如下：</p><script type="math/tex; mode=display">PE(pos, 2i)&=sin(\frac{pos}{10000^{\frac{2i}{d_{model}}}})\\PE(pos, 2i+1)&= cos(\frac{pos}{10000^{\frac{2i}{d_{model}}}})</script><p>在公式中，pos表示单词的位置，i表示单词的维度，关于位置编码的实现可以参看Google的实现<a href="https://link.zhihu.com/?target=https%3A//github.com/tensorflow/tensor2tensor/blob/23bd23b9830059fbc349381b70d9429b5c40a139/tensor2tensor/layers/common_attention.py">get_timing_signal_1d()</a>函数找到对应代码。作者使用正余弦编码位置，是根据公式$sin(\alpha + \beta)=sin\alpha cos\beta + cos\alpha sin\beta$​以及$cos(\alpha+\beta)=cos\alpha cos\beta -sin\alpha sin\beta$​，这表明位置 k+p的位置向量可以表示为位置k的特征向量的线性变化，这为模型捕捉单词之间的相对位置关系提供了非常大的便利。</p></li></ol><h3 id="4-2-Transformer的Encoder"><a href="#4-2-Transformer的Encoder" class="headerlink" title="4.2 Transformer的Encoder"></a>4.2 Transformer的Encoder</h3><ol><li><p>输入再编码</p><p>我们的输入数据X的维度是[batch_size, sequence_length]，经过上面的词嵌入（word2Vec）后，我们得到的输入的size是[batch_size, sequence_length, embedding_dimension]，embedding_dimension取决于Word2Vec算法，Transformer中采用的是512长度的字向量。比如我们得到了一些输入，他的shape是[3, 10, 512]，Transformer的Encoder分别使用三个shape为[embedding_dimension, embedding_dimension]参数可学习权重矩阵Weight来分别乘以输入，将其再次通过LinearLayer对输入进行编码，这样我们就得到了所谓的Q（query），K（key），V（value）向量。</p></li><li><p>self-attention</p><p>通过第一步，我们得到了序列中的每个token的Q、K、V向量。然后Q向量和K向量先两两做内积，计算相似度，然后被$\sqrt {d_k}$​​进行归一化（$d_k$​是Q向量的维度长度），这样就得到了一个weight matrix，里面存了score，然后将这个score进行softMax处理，得到[0, 1]的一个分布，这时候的矩阵就是Attention了。然后将attention乘以V向量，就得到了包含了上下文信息的输出value。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211123185651042.png" alt="image-20211123185651042" style="zoom:50%;" /></p><script type="math/tex; mode=display">Attention(Q, K, V) = softmax(\frac{QK^T}{\sqrt {d_k}})V</script></li><li><p>归一化（layer Normalization）+ skipConnection</p><p>由self-attention整合完上下文的信息后，得到输出后，要进行layer Normalization。在处理序列数据时，通常使用的是layer Normalization，而非Batch Normalization，因为序列数据通常长短不一，不同batch数据之间的gap通常存在于序列的长短中，而使用layer Normalization就能够越过长度不同这个问题。skipConnection是帮助网络收敛的惯用伎俩，即把输入短接到输出位置。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211123170513273.png" alt="image-20211123170513273" style="zoom:30%;" /></p></li><li><p>MLP（Feed Forward Network）</p><p>上图中Transformer- Encoder的最后一脚是feed Forward层，就是MLP，就是linear layer。他的作用是把向量的维度再次进行变化，尤其是我们下面将要说到的Multi-head Attention中会用到它来compress特征维数。</p></li><li><p>Multi Head Attention</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/multihead.jpeg" alt="multihead" style="zoom:20%;" /></p><p>Multi- head- attention就是用h套参数组去做上面的事情（包括input再编码，self-attention计算及使用，Layer Normalization），然后将得到的h套结果concatenate到一起之后，使用Feed Forward Layer进行维度压缩，就是这样啦。</p></li></ol><h3 id="4-3-Transformer的Decoder"><a href="#4-3-Transformer的Decoder" class="headerlink" title="4.3 Transformer的Decoder"></a>4.3 Transformer的Decoder</h3><ol><li><p>输入再编码</p><p>目标的输出序列也要进行再编码，假如输入的数据是[batch_size,  seq_length]—&gt;[3, 7]—&gt;[batch_size, seq_length, embedding_dimension]—&gt;[3, 7, 512]，而期望的输出数据是[batch_size,  seq_length]—&gt;[3, 13]—&gt;[batch_size, seq_length, embedding_dimension]—&gt;[3, 13, 512]，这时先要使用三个权重矩阵进行再编码。</p></li><li><p>输入mask处理attention</p><p>经过第一步处理后，得到序列向量的编码后，计算self-attention时，由于下文要输出的信息还未生成，只有上文的信息能够参与到attention中，所以要使用mask来mute掉attention矩阵中的下文关注，如下图中的Masked Multi-Head Attention所示。</p><p><img src="https://cdn.jsdelivr.net/gh/Wastoon/myPicGo/img/image-20211123182823830.png" alt="image-20211123182823830" style="zoom:30%;" /></p></li><li><p>用Encoder-Decoder-attention矫正输入编码</p><p>和经典款的Seq2Seq模型中的attention关系最接近的就是Encoder-Decoder-attention了，他是Encoder与Decoder之间的关系和桥梁。用来度量输入序列向量编码和输出序列向量编码之间的alignment程度，即把输出序列向量作为key，去查询输入序列向量，得到attention后，通过attention聚合出能够最能帮助得到准确输出的V（value）。</p></li></ol><h3 id="4-4-Transformer的Training-Process-amp-amp-Inference-Process"><a href="#4-4-Transformer的Training-Process-amp-amp-Inference-Process" class="headerlink" title="4.4 Transformer的Training Process&amp;&amp;Inference Process"></a>4.4 Transformer的Training Process&amp;&amp;Inference Process</h3><ul><li><p>当进行测试时，Input Embedding可以完整的作为Encoder的输入进行特征表示，但是Decoder的输入侧所需要的Output Embedding需要从token<strong><start></strong>作为开始输入，经过前向后，Decoder得到了下一个单词，然后将<strong><start></strong>和该单词连接共同作为Decoder的输入，再进行前向过程，经过一番for循环后，当Decoder得到的输出是<strong><eos/></strong>时，翻译就完成了。</p></li><li><p>训练Transformer时，上图中的Input Embedding和Output Embedding都是完整的句子，但在Decoder中要注意为attention加mask来模拟当下想要的输出结果只能依靠上文信息来得到。其实训练过程应当是和测试过程保持一致，但为了减少训练过程的时间，我们做了并行化处理，例如我们的完整的OutputEmbedding是[[start], i , love, maching, learning] ，我们会乘一个下三角矩阵，得到的是：<br>[[start]<br>[start] i<br>[start] i love<br>[start] i love maching<br>[start] i love maching learning]，训练阶段将这个矩阵直接作为GT，当作Output Embedding直接输入Decoder，分别可以得到5个输出$O_i, i\in[1,2,3,4,5]$​，但理想的输出应该是[i, love, maching learning, [eos/]，然后在$O_i$​和理想输出间计算交叉熵损失，反传梯度驱动模型参数更新。</p></li></ul><h3 id="4-5-常见的Transformer大模型"><a href="#4-5-常见的Transformer大模型" class="headerlink" title="4.5 常见的Transformer大模型"></a>4.5 常见的Transformer大模型</h3><ul><li>「BERT」<strong>B</strong>idirectional <strong>E</strong>ncoder <strong>R</strong>epresentations from <strong>T</strong>ransformers。其实就是大规模语料库在预训练任务上训练Transformer的Encoder。</li><li>「GPT」<strong>G</strong>enerative <strong>P</strong>re-<strong>T</strong>raining。其实就是Transformer的Decoder。后来的GPT2可以做阅读理解，Summarization， Translation等，GPT3最近也开放了api接口的申请名单，但是没有中国昂。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 自然语言处理 </category>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自然语言处理 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vison Transformer系列文章解读（一）</title>
      <link href="/2021/11/21/Vison-Transformer%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E8%A7%A3%E8%AF%BB%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2021/11/21/Vison-Transformer%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E8%A7%A3%E8%AF%BB%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 计算机视觉 </category>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ButterFly的标签语法糖</title>
      <link href="/2021/11/17/ButterFly%E7%9A%84%E6%A0%87%E7%AD%BE%E8%AF%AD%E6%B3%95%E7%B3%96/"/>
      <url>/2021/11/17/ButterFly%E7%9A%84%E6%A0%87%E7%AD%BE%E8%AF%AD%E6%B3%95%E7%B3%96/</url>
      
        <content type="html"><![CDATA[<h2 id="自定义文本块"><a href="#自定义文本块" class="headerlink" title="自定义文本块"></a>自定义文本块</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue no-icon %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink no-icon %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red no-icon %&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange no-icon %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple no-icon %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green no-icon %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div><h2 id="复选列表"><a href="#复选列表" class="headerlink" title="复选列表"></a>复选列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><h2 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><h2 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">  在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">  文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">  &#123;% span center logo large, Volantis %&#125;</span><br><span class="line">  &#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<span class='p center logo large'>Volantis</span><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><h2 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-07-24 %&#125;</span><br><span class="line"></span><br><span class="line">天气不错，适合出去约妹</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-05-15 %&#125;</span><br><span class="line"></span><br><span class="line">下雨了，适合在房间</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-04-20 %&#125;</span><br><span class="line"></span><br><span class="line">有空一起拉屎</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline"><div class="timenode"><div class="meta"><p><p>2020-07-24</p></p></div><div class="body"><p>天气不错，适合出去约妹</p></div></div><div class="timenode"><div class="meta"><p><p>2020-05-15</p></p></div><div class="body"><p>下雨了，适合在房间</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-20</p></p></div><div class="body"><p>有空一起拉屎</p></div></div></div><h2 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link GitHub, https://github.com, https://cdn.jsdelivr.net/gh/cpddo/p<span class="emphasis">_img@450ea647ca67bd386416a689f3eb1bc6a508b3b9/2021/01/23/f7ac7b26db76ada1704f6af09bedacbe.webp %&#125;</span></span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="GitHub" href="https://github.com"><div class="left"><img src="https://cdn.jsdelivr.net/gh/cpddo/p_img@450ea647ca67bd386416a689f3eb1bc6a508b3b9/2021/01/23/f7ac7b26db76ada1704f6af09bedacbe.webp"/></div><div class="right"><p class="text">GitHub</p><p class="url">https://github.com</p></div></a></div><h2 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h2><h3 id="1-一组含有头像的链接："><a href="#1-一组含有头像的链接：" class="headerlink" title="1. 一组含有头像的链接："></a>1. 一组含有头像的链接：</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell GitHub, https://github.com/, https://cdn.jsdelivr.net/gh/cpddo/p<span class="emphasis">_img@450ea647ca67bd386416a689f3eb1bc6a508b3b9/2021/01/23/f7ac7b26db76ada1704f6af09bedacbe.webp %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% cell 哔哩哔哩, https://www.bilibili.com/, https://cdn.jsdelivr.net/gh/cpddo/p_</span>img@e642ee265c8ae2bbd0994716aa12b3adbe07f2c4/2021/01/23/2ceca69a212d3b9988bbd2c41edc636c.webp %&#125;</span><br><span class="line">&#123;% cell Pixiv, https://www.pixiv.net/, https://cdn.jsdelivr.net/gh/cpddo/p<span class="emphasis">_img@5c4fc20944c706aa452c31d1bddbdcc672e8c6ab/2021/01/23/7658d06315d32bcf0c954b3d8e8879e0.webp %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% cell YouTube, https://www.youtube.com/, https://cdn.jsdelivr.net/gh/cpddo/p_</span>img@ff4781678ea6227f5824e3c8bfd5cc27441db4da/2021/01/23/f4e292c780275465c9150eb3cb0785a4.webp %&#125;</span><br><span class="line">&#123;% cell 今日热榜, https://tophub.today/, https://cdn.jsdelivr.net/gh/cpddo/p<span class="emphasis">_img@11fff6ed270722d709eb0ac88ce47f468c21d2ba/2021/01/23/cd22cd9d34d7d7bd58114d7d7a195822.webp %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% endbtns %&#125;</span></span><br></pre></td></tr></table></figure><div class="btns circle grid5">            <a class="button" href='https://github.com/' title='GitHub'><img src='https://cdn.jsdelivr.net/gh/cpddo/p_img@450ea647ca67bd386416a689f3eb1bc6a508b3b9/2021/01/23/f7ac7b26db76ada1704f6af09bedacbe.webp'>GitHub</a><a class="button" href='https://www.bilibili.com/' title='哔哩哔哩'><img src='https://cdn.jsdelivr.net/gh/cpddo/p_img@e642ee265c8ae2bbd0994716aa12b3adbe07f2c4/2021/01/23/2ceca69a212d3b9988bbd2c41edc636c.webp'>哔哩哔哩</a><a class="button" href='https://www.pixiv.net/' title='Pixiv'><img src='https://cdn.jsdelivr.net/gh/cpddo/p_img@5c4fc20944c706aa452c31d1bddbdcc672e8c6ab/2021/01/23/7658d06315d32bcf0c954b3d8e8879e0.webp'>Pixiv</a><a class="button" href='https://www.youtube.com/' title='YouTube'><img src='https://cdn.jsdelivr.net/gh/cpddo/p_img@ff4781678ea6227f5824e3c8bfd5cc27441db4da/2021/01/23/f4e292c780275465c9150eb3cb0785a4.webp'>YouTube</a><a class="button" href='https://tophub.today/' title='今日热榜'><img src='https://cdn.jsdelivr.net/gh/cpddo/p_img@11fff6ed270722d709eb0ac88ce47f468c21d2ba/2021/01/23/cd22cd9d34d7d7bd58114d7d7a195822.webp'>今日热榜</a>          </div><h3 id="2-含有图标的按钮："><a href="#2-含有图标的按钮：" class="headerlink" title="2. 含有图标的按钮："></a>2. 含有图标的按钮：</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h3 id="3-圆形图标-标题-描述-图片-网格5列-居中"><a href="#3-圆形图标-标题-描述-图片-网格5列-居中" class="headerlink" title="3. 圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中"></a>3. 圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><h2 id="github-卡片-ghcard"><a href="#github-卡片-ghcard" class="headerlink" title="github 卡片 ghcard"></a>github 卡片 ghcard</h2><h3 id="1-用户信息卡片"><a href="#1-用户信息卡片" class="headerlink" title="1. 用户信息卡片"></a>1. 用户信息卡片</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard jerryc127 %&#125;               | &#123;% ghcard Zfour, theme=vue %&#125;              |</span><br><span class="line">| ------------------------------------ | ------------------------------------------ |</span><br><span class="line">| &#123;% ghcard Akilarlxh, theme=buefy %&#125;  | &#123;% ghcard ruanyf, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard philwebb, theme=onedark %&#125; | &#123;% ghcard zjwo, theme=solarized-dark %&#125;    |</span><br><span class="line">| &#123;% ghcard vpavic, theme=algolia %&#125;   | &#123;% ghcard bclozel, theme=calm %&#125;           |</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/jerryc127"><img src="https://github-readme-stats.vercel.app/api/?username=jerryc127&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Zfour"><img src="https://github-readme-stats.vercel.app/api/?username=Zfour&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Akilarlxh"><img src="https://github-readme-stats.vercel.app/api/?username=Akilarlxh&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/ruanyf"><img src="https://github-readme-stats.vercel.app/api/?username=ruanyf&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/philwebb"><img src="https://github-readme-stats.vercel.app/api/?username=philwebb&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/zjwo"><img src="https://github-readme-stats.vercel.app/api/?username=zjwo&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/vpavic"><img src="https://github-readme-stats.vercel.app/api/?username=vpavic&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/bclozel"><img src="https://github-readme-stats.vercel.app/api/?username=bclozel&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><h3 id="2-仓库信息卡片"><a href="#2-仓库信息卡片" class="headerlink" title="2. 仓库信息卡片"></a>2. 仓库信息卡片</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard spring-projects/spring-boot %&#125;                 | &#123;% ghcard mybatis/mybatis-3, theme=vue %&#125;               |</span><br><span class="line">| -------------------------------------------------------- | ------------------------------------------------------- |</span><br><span class="line">| &#123;% ghcard jerryc127/hexo-theme-butterfly, theme=buefy %&#125; | &#123;% ghcard alibaba/fastjson, theme=solarized-light %&#125;    |</span><br><span class="line">| &#123;% ghcard alibaba/druid, theme=onedark %&#125;                | &#123;% ghcard alibaba/arthas, theme=solarized-dark %&#125;       |</span><br><span class="line">| &#123;% ghcard Tencent/weui, theme=algolia %&#125;                 | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/spring-projects/spring-boot"><img src="https://github-readme-stats.vercel.app/api/pin/?username=spring-projects&repo=spring-boot&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/mybatis/mybatis-3"><img src="https://github-readme-stats.vercel.app/api/pin/?username=mybatis&repo=mybatis-3&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/jerryc127/hexo-theme-butterfly"><img src="https://github-readme-stats.vercel.app/api/pin/?username=jerryc127&repo=hexo-theme-butterfly&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/alibaba/fastjson"><img src="https://github-readme-stats.vercel.app/api/pin/?username=alibaba&repo=fastjson&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/alibaba/druid"><img src="https://github-readme-stats.vercel.app/api/pin/?username=alibaba&repo=druid&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/alibaba/arthas"><img src="https://github-readme-stats.vercel.app/api/pin/?username=alibaba&repo=arthas&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Tencent/weui"><img src="https://github-readme-stats.vercel.app/api/pin/?username=Tencent&repo=weui&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><h2 id="github-徽标-ghbdage"><a href="#github-徽标-ghbdage" class="headerlink" title="github 徽标 ghbdage"></a>github 徽标 ghbdage</h2><h3 id="1-基本参数-定义徽标左右文字和图标"><a href="#1-基本参数-定义徽标左右文字和图标" class="headerlink" title="1. 基本参数,定义徽标左右文字和图标"></a>1. 基本参数,定义徽标左右文字和图标</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object><h3 id="2-信息参数，定义徽标右侧内容背景色，指向链接"><a href="#2-信息参数，定义徽标右侧内容背景色，指向链接" class="headerlink" title="2. 信息参数，定义徽标右侧内容背景色，指向链接"></a>2. 信息参数，定义徽标右侧内容背景色，指向链接</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">// 如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><p>// 如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><h3 id="3-拓展参数，支持shields的API的全部参数内容"><a href="#3-拓展参数，支持shields的API的全部参数内容" class="headerlink" title="3. 拓展参数，支持shields的API的全部参数内容"></a>3. 拓展参数，支持shields的API的全部参数内容</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">// 如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><p>// 如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><h2 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">你看我长得漂亮不</span><br><span class="line"></span><br><span class="line">我觉得很漂亮 &#123;% inlineImg https://7.dusays.com/2021/04/30/38c46d77eb99f.png 150px %&#125;</span><br></pre></td></tr></table></figure><p>你看我长得漂亮不</p><p>我觉得很漂亮 <img class="inline-img" src="https://7.dusays.com/2021/04/30/38c46d77eb99f.png" style="height:150px"/></p><h2 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div><h2 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h2><h3 id="1-100-宽度"><a href="#1-100-宽度" class="headerlink" title="1. 100% 宽度"></a>1. 100% 宽度</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/2d10a99a5285890815076699337/jDSbeLEbAvgA.mp4 %&#125;</span><br></pre></td></tr></table></figure><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/2d10a99a5285890815076699337/jDSbeLEbAvgA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h3 id="2-50-宽度"><a href="#2-50-宽度" class="headerlink" title="2. 50% 宽度"></a>2. 50% 宽度</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/c271d9f55285890808619247572/cvQ5JmaxQeIA.mp4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/8373c2325285890808618842182/0G2tZMSgFlIA.mp4 %&#125;</span><br><span class="line">&#123;% video https://bos.nj.bpc.baidu.com/tieba-smallvideo-transcode-crf/10517287<span class="emphasis">_a019c0a4655b865403740b7b9d1f0622_</span>0.mp4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/62034a6a5285890805262027097/2ZZqs2WH2HUA.mp4 %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><div class="videos" col='2'><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/c271d9f55285890808619247572/cvQ5JmaxQeIA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/8373c2325285890808618842182/0G2tZMSgFlIA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://bos.nj.bpc.baidu.com/tieba-smallvideo-transcode-crf/10517287_a019c0a4655b865403740b7b9d1f0622_0.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/62034a6a5285890805262027097/2ZZqs2WH2HUA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div><h3 id="3-25-宽度"><a href="#3-25-宽度" class="headerlink" title="3. 25% 宽度"></a>3. 25% 宽度</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/dbb2338d5285890805087414392/iPOPAzDcziQA.mp4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/dbaff9015285890805087410150/hFeFC3ppTLsA.mp4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/b6ccab4b5285890805073207494/crb6Lmf26tQA.mp4 %&#125;</span><br><span class="line">&#123;% video https://sf1-ttcdn-tos.pstatp.com/obj/tos-cn-v-0004/aeacaeb49b1a4bf483d93356091fad60 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/3c5d29755285890805529884127/jgf48juQ7PoA.mp4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/63f968535285890808730645862/Gg7ng1DpoJwA.mp4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/562fa8ea5285890808730073912/cAJgQKS0gL8A.mp4 %&#125;</span><br><span class="line">&#123;% video https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/5d54d76e5285890808730396152/z0aYxeAto3QA.mp4 %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><div class="videos" col='4'><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/dbb2338d5285890805087414392/iPOPAzDcziQA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/dbaff9015285890805087410150/hFeFC3ppTLsA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/b6ccab4b5285890805073207494/crb6Lmf26tQA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://sf1-ttcdn-tos.pstatp.com/obj/tos-cn-v-0004/aeacaeb49b1a4bf483d93356091fad60' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/3c5d29755285890805529884127/jgf48juQ7PoA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/63f968535285890808730645862/Gg7ng1DpoJwA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/562fa8ea5285890808730073912/cAJgQKS0gL8A.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/5d54d76e5285890808730396152/z0aYxeAto3QA.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div><h2 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line">![<span class="string">images</span>](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">​<span class="code">```java</span></span><br><span class="line"><span class="code">public class Test &#123;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">​```</span></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line">  &#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line">hahaha😜</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><details ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt="images"></p>              </div>            </details><details cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> 查看代码测试 </summary>              <div class='content'>              <p>​```java<br>public class Test {</p><p>}<br>​```</p>              </div>            </details><details yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha😜</p>              </div>            </details>              </div>            </details>              </div>            </details><h2 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 滕王阁序,王勃 %&#125;</span><br><span class="line">飞流直下三万尺，疑是银河落十天。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><div class='poem'><div class='poem-title'>滕王阁序</div><div class='poem-author'>王勃</div><p>豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。(豫章故郡 一作：南昌故郡；青霜 一作：清霜)</p><p>　　时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。（层峦 一作：层台；即冈 一作：列冈；飞阁流丹 一作：飞阁翔丹）</p><p>　　披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津，青雀黄龙之舳。云销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨，雁阵惊寒，声断衡阳之浦。(轴 通：舳；迷津 一作：弥津；云销雨霁，彩彻区明 一作：虹销雨霁，彩彻云衢)</p><p>　　遥襟甫畅，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人；萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？(遥襟甫畅 一作：遥吟俯畅)</p><p>　　嗟乎！时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！(见机 一作：安贫；以犹欢 一作：而相欢)</p><p>　　勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？</p><p>　　呜呼！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵俱成。请洒潘江，各倾陆海云尔：<br>　　滕王高阁临江渚，佩玉鸣鸾罢歌舞。<br>　　画栋朝飞南浦云，珠帘暮卷西山雨。<br>　　闲云潭影日悠悠，物换星移几度秋。<br>　　阁中帝子今何在？槛外长江空自流。</p></div><h2 id="label"><a href="#label" class="headerlink" title="label"></a>label</h2><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><h2 id="进度条"><a href="#进度条" class="headerlink" title="进度条"></a>进度条</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><h2 id="button"><a href="#button" class="headerlink" title="button"></a>button</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn &#x27;https://a-wei-y.top/&#x27;,MyBlog %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://a-wei-y.top/&#x27;,MyBlog,far fa-hand-point-right %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://a-wei-y.top/&#x27;,MyBlog,,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://a-wei-y.top/&#x27;,MyBlog,far fa-hand-point-right,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://a-wei-y.top/&#x27;,MyBlog,far fa-hand-point-right,larger %&#125;</span><br></pre></td></tr></table></figure><p>This is my website, click the button <a class="btn-beautify button--animated " href="https://a-wei-y.top/"   title="MyBlog"><span>MyBlog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated " href="https://a-wei-y.top/"   title="MyBlog"><i class="far fa-hand-point-right"></i><span>MyBlog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="https://a-wei-y.top/"   title="MyBlog"><span>MyBlog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="https://a-wei-y.top/"   title="MyBlog"><i class="far fa-hand-point-right"></i><span>MyBlog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated larger" href="https://a-wei-y.top/"   title="MyBlog"><i class="far fa-hand-point-right"></i><span>MyBlog</span></a></p>]]></content>
      
      
      <categories>
          
          <category> 博客美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ButterFly标签 </tag>
            
            <tag> 博客正文美化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
